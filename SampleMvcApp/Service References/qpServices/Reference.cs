//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SampleMvcApp.qpServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionInfo", Namespace="http://schemas.datacontract.org/2004/07/QuestionBankService")]
    [System.SerializableAttribute()]
    public partial class QuestionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] OptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RightAnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Marks {
            get {
                return this.MarksField;
            }
            set {
                if ((this.MarksField.Equals(value) != true)) {
                    this.MarksField = value;
                    this.RaisePropertyChanged("Marks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Options {
            get {
                return this.OptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.OptionsField, value) != true)) {
                    this.OptionsField = value;
                    this.RaisePropertyChanged("Options");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Question {
            get {
                return this.QuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionField, value) != true)) {
                    this.QuestionField = value;
                    this.RaisePropertyChanged("Question");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionNo {
            get {
                return this.QuestionNoField;
            }
            set {
                if ((this.QuestionNoField.Equals(value) != true)) {
                    this.QuestionNoField = value;
                    this.RaisePropertyChanged("QuestionNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RightAnswer {
            get {
                return this.RightAnswerField;
            }
            set {
                if ((this.RightAnswerField.Equals(value) != true)) {
                    this.RightAnswerField = value;
                    this.RaisePropertyChanged("RightAnswer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="qpServices.IQuestionService")]
    public interface IQuestionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/AddQuestion", ReplyAction="http://tempuri.org/IQuestionService/AddQuestionResponse")]
        void AddQuestion(SampleMvcApp.qpServices.QuestionInfo question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/AddQuestion", ReplyAction="http://tempuri.org/IQuestionService/AddQuestionResponse")]
        System.Threading.Tasks.Task AddQuestionAsync(SampleMvcApp.qpServices.QuestionInfo question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GenerateQuestions", ReplyAction="http://tempuri.org/IQuestionService/GenerateQuestionsResponse")]
        SampleMvcApp.qpServices.QuestionInfo[] GenerateQuestions(string subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/GenerateQuestions", ReplyAction="http://tempuri.org/IQuestionService/GenerateQuestionsResponse")]
        System.Threading.Tasks.Task<SampleMvcApp.qpServices.QuestionInfo[]> GenerateQuestionsAsync(string subject);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQuestionServiceChannel : SampleMvcApp.qpServices.IQuestionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QuestionServiceClient : System.ServiceModel.ClientBase<SampleMvcApp.qpServices.IQuestionService>, SampleMvcApp.qpServices.IQuestionService {
        
        public QuestionServiceClient() {
        }
        
        public QuestionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QuestionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuestionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuestionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddQuestion(SampleMvcApp.qpServices.QuestionInfo question) {
            base.Channel.AddQuestion(question);
        }
        
        public System.Threading.Tasks.Task AddQuestionAsync(SampleMvcApp.qpServices.QuestionInfo question) {
            return base.Channel.AddQuestionAsync(question);
        }
        
        public SampleMvcApp.qpServices.QuestionInfo[] GenerateQuestions(string subject) {
            return base.Channel.GenerateQuestions(subject);
        }
        
        public System.Threading.Tasks.Task<SampleMvcApp.qpServices.QuestionInfo[]> GenerateQuestionsAsync(string subject) {
            return base.Channel.GenerateQuestionsAsync(subject);
        }
    }
}
